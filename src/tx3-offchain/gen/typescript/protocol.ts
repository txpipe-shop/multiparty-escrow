// This file is auto-generated.

import {
  Client as TRPClient,
  type ClientOptions,
  type TxEnvelope,
} from "tx3-sdk/trp";

export const DEFAULT_TRP_ENDPOINT = "http://localhost:3000/trp";

export const DEFAULT_HEADERS = {};

export const DEFAULT_ENV_ARGS = {};

export type OpenParams = {
  channelid: Uint8Array;
  date: number;
  groupid: Uint8Array;
  initialdeposit: number;
  inputref: string;
  policyid: Uint8Array;
  receiverinput: Uint8Array;
  sender: string;
  signerpubkey: Uint8Array;
  since: number;
  tokenname: Uint8Array;
  until: number;
};

export const OPEN_IR = {
  bytecode:
    "1200000001000000000000000a0000000100000000000000200000000000000082af870a1773a793127f34d55634fa6ad774988b301e4f8e1df04ca2724b98d80000000001000000000000000600000000000000736f7572636501010d000000060000000000000073656e6465720500000000010d0000000800000000000000696e7075747265660600000000000000000000000000020000000000000001090000001c000000000000007da6163888081e317f8567176057f0e9634932f85bc630657b1f81330103000000000000000000000006000000000000000d00000009000000000000006368616e6e656c69640400000005000000000000000000000000000000000000000d0000000c000000000000007369676e65727075626b6579040000000d0000000d000000000000007265636569766572696e707574040000000d000000070000000000000067726f75706964040000000d000000040000000000000064617465020000000111000000110000000c0000000100000000000000040000001c00000000000000921e27e15e2552a40515564ba10a26ecb1fe1a34ac6ccb58c1ce1320040000000400000000000000414749580d0000000e00000000000000696e697469616c6465706f736974020000000c0000000100000000000000000000000000000005000000404b4c00000000000000000000000000000000000c00000001000000000000000d0000000800000000000000706f6c6963796964040000000d0000000900000000000000746f6b656e6e616d6504000000050000000100000000000000000000000000000000000000010d000000060000000000000073656e646572050000000001110000001100000011000000100000000600000000000000736f757263650c0000000100000000000000040000001c00000000000000921e27e15e2552a40515564ba10a26ecb1fe1a34ac6ccb58c1ce1320040000000400000000000000414749580d0000000e00000000000000696e697469616c6465706f736974020000000100000012000000010000000c0000000100000000000000000000000000000005000000404b4c000000000000000000000000000100000001010d000000050000000000000073696e636502000000010d0000000500000000000000756e74696c020000000100000000000000010c00000001000000000000000d0000000800000000000000706f6c6963796964040000000d0000000900000000000000746f6b656e6e616d65040000000500000001000000000000000000000000000000010300000000000000000000000000000000000000000000000000000001000000000000000000010a0000000100000000000000200000000000000036f545ec1fd3c4c5141b342c5a7e0d5a7592a13e49d0ae61082e91d90303d524050000000000000000000000",
  encoding: "hex",
  version: "v1alpha3",
};

export class Client {
  readonly #client: TRPClient;

  constructor(options: ClientOptions) {
    this.#client = new TRPClient(options);
  }

  transformArgs(args: Record<string, any>) {
    return Object.fromEntries(
      Object.entries(args).map(([k, v]) => [
        k.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`),
        v,
      ]),
    );
  }

  async openTx(args: OpenParams): Promise<TxEnvelope> {
    return await this.#client.resolve({
      tir: OPEN_IR,
      args: this.transformArgs(args),
    });
  }
}

// Create a default client instance
export const protocol = new Client({
  endpoint: DEFAULT_TRP_ENDPOINT,
  headers: DEFAULT_HEADERS,
  envArgs: DEFAULT_ENV_ARGS,
});
